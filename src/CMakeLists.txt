cmake_minimum_required(VERSION 2.6)

SET(RCT_ALL_TARGETS "")
            
# --- generate executable
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/core/src ${CMAKE_SOURCE_DIR}/rsb/src ${CMAKE_SOURCE_DIR}/ros/src ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_BINARY_DIR}/../../core/src)

ADD_EXECUTABLE(rct-static-publisher rct/RctStaticPublisher.cpp rct/parsers/ParserXML.cpp rct/parsers/ParserINI.cpp)
TARGET_LINK_LIBRARIES(rct-static-publisher ${RCT_LIBRARIES} ${RSB_LIBRARIES} ${RST_LIBRARIES})
SET_TARGET_PROPERTIES(rct-static-publisher PROPERTIES
                                 VERSION ${RCTTOOLS_VERSION}
                                 SOVERSION ${RCTTOOLS_VERSION_SHORT})
LIST(APPEND RCT_ALL_TARGETS rct-static-publisher)

IF(tf2_ros_FOUND AND RCT-ROS_FOUND)
    ADD_EXECUTABLE(rct-ros-bridge rct/RctRosBridge.cpp)
    TARGET_LINK_LIBRARIES(rct-ros-bridge ${RCT_LIBRARIES} ${RCT-ROS_LIBRARIES} ${RSB_LIBRARIES} ${RST_LIBRARIES} ${tf2_ros_LIBRARIES})
    SET_TARGET_PROPERTIES(rct-ros-bridge PROPERTIES
                                 VERSION ${RCTTOOLS_VERSION}
                                 SOVERSION ${RCTTOOLS_VERSION_SHORT})
	LIST(APPEND RCT_ALL_TARGETS rct-ros-bridge)
ENDIF(tf2_ros_FOUND AND RCT-ROS_FOUND)

ADD_EXECUTABLE(rct-echo rct/RctEcho.cpp)
TARGET_LINK_LIBRARIES(rct-echo ${RCT_LIBRARIES} ${RSB_LIBRARIES} ${RST_LIBRARIES} ${Boost_LIBRARIES})
SET_TARGET_PROPERTIES(rct-echo PROPERTIES
                                 VERSION ${RCTTOOLS_VERSION}
                                 SOVERSION ${RCTTOOLS_VERSION_SHORT})
LIST(APPEND RCT_ALL_TARGETS rct-echo)
                                 
ADD_EXECUTABLE(rct-from-rst rct/RctFromRst.cpp rct/parsers/ParserXML.cpp rct/parsers/ParserINI.cpp)
TARGET_LINK_LIBRARIES(rct-from-rst ${RCT_LIBRARIES} ${RSB_LIBRARIES} ${RST_LIBRARIES} ${Boost_LIBRARIES})
SET_TARGET_PROPERTIES(rct-from-rst PROPERTIES
                                 VERSION ${RCTTOOLS_VERSION}
                                 SOVERSION ${RCTTOOLS_VERSION_SHORT})
LIST(APPEND RCT_ALL_TARGETS rct-from-rst)

IF(POPPLERQT5_FOUND OR POPPLERQT4_FOUND)
	SET(RCT-VIEW-SOURCES rct/RctView.cpp rct/viewer/imageviewer.cpp)
	SET(RCT-VIEW-LIBS ${RCT_LIBRARIES} ${RSB_LIBRARIES} ${RST_LIBRARIES})
	IF(POPPLERQT5_FOUND)
	    LIST(APPEND RCT-VIEW-LIBS ${POPPLERQT5_LIBRARIES} ${Qt5Widgets_LIBRARIES})
	ENDIF(POPPLERQT5_FOUND)
	IF(POPPLERQT4_FOUND)
		QT4_WRAP_CPP(MOC_SOURCES rct/viewer/imageviewer.h)
	    LIST(APPEND RCT-VIEW-LIBS ${POPPLERQT4_LIBRARIES} ${QT_LIBRARIES})
	    LIST(APPEND RCT-VIEW-SOURCES ${MOC_SOURCES})
	ENDIF(POPPLERQT4_FOUND)
	
	ADD_EXECUTABLE(rct-view ${RCT-VIEW-SOURCES})
	TARGET_LINK_LIBRARIES(rct-view ${RCT-VIEW-LIBS})
	SET_TARGET_PROPERTIES(rct-view PROPERTIES
	                                 VERSION ${RCTTOOLS_VERSION}
	                                 SOVERSION ${RCTTOOLS_VERSION_SHORT})
	LIST(APPEND RCT_ALL_TARGETS rct-view)
ENDIF(POPPLERQT5_FOUND OR POPPLERQT4_FOUND)

# --- install target
INSTALL(TARGETS ${RCT_ALL_TARGETS}
        RUNTIME DESTINATION ${BINDIR})
